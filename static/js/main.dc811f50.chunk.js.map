{"version":3,"sources":["data.js","Pokemon.js","Button.js","Only1Pokemon.js","App.js","reportWebVitals.js","index.js"],"names":["pokemons","id","name","type","averageWeight","value","measurementUnit","image","moreInfo","Pokemon","className","this","props","pokemon","src","alt","React","Component","Button","console","log","length","onClick","action","disabled","Only1Pokemon","state","current","filter","filtered","setState","_props","totalNumber","Set","reduce","types","filteredPokemons","getFiltered","getAllTypes","filteredPokemon","map","nextPokemon","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAsGeA,G,MAtGE,CACf,CACIC,GAAI,GACJC,KAAM,UACNC,KAAM,WACNC,cAAe,CACXC,MAAO,EACPC,gBAAiB,MAErBC,MAAO,4DACPC,SAAU,kEAEd,CACIP,GAAI,EACJC,KAAM,aACNC,KAAM,OACNC,cAAe,CACXC,MAAO,IACPC,gBAAiB,MAErBC,MAAO,0DACPC,SAAU,qEAEd,CACIP,GAAI,GACJC,KAAM,WACNC,KAAM,MACNC,cAAe,CACXC,MAAO,IACPC,gBAAiB,MAErBC,MAAO,0DACPC,SAAU,mEAEd,CACIP,GAAI,GACJC,KAAM,QACNC,KAAM,SACNC,cAAe,CACXC,MAAO,IACPC,gBAAiB,MAErBC,MAAO,0DACPC,SAAU,gEAEd,CACIP,GAAI,GACJC,KAAM,WACNC,KAAM,UACNC,cAAe,CACXC,MAAO,GACPC,gBAAiB,MAErBC,MAAO,4DACPC,SAAU,mEAEd,CACIP,GAAI,IACJC,KAAM,MACNC,KAAM,UACNC,cAAe,CACXC,MAAO,EACPC,gBAAiB,MAErBC,MAAO,0DACPC,SAAU,8DAEd,CACIP,GAAI,GACJC,KAAM,WACNC,KAAM,OACNC,cAAe,CACXC,MAAO,GACPC,gBAAiB,MAErBC,MAAO,0DACPC,SAAU,mEAEd,CACIP,GAAI,IACJC,KAAM,UACNC,KAAM,SACNC,cAAe,CACXC,MAAO,IACPC,gBAAiB,MAErBC,MAAO,0DACPC,SAAU,kEAEd,CACIP,GAAI,IACJC,KAAM,YACNC,KAAM,SACNC,cAAe,CACXC,MAAO,KACPC,gBAAiB,MAErBC,MAAO,0DACPC,SAAU,sE,iDCjFDC,E,4JAbb,WACE,OACE,sBAAKC,UAAY,UAAjB,UACF,sBAAKA,UAAU,OAAf,UACA,4BAAIC,KAAKC,MAAMC,QAAQX,OACvB,4BAAIS,KAAKC,MAAMC,QAAQV,OACvB,iDAAoBQ,KAAKC,MAAMC,QAAQT,cAAcC,MAArD,IAA6DM,KAAKC,MAAMC,QAAQT,cAAcE,sBAE5F,qBAAKQ,IAAKH,KAAKC,MAAMC,QAAQN,MAAOQ,IAAI,Y,GATxBC,IAAMC,WCUbC,E,4JATb,WAEE,OADAC,QAAQC,IAAIT,KAAKC,MAAMS,QAErB,wBAAQC,QAASX,KAAKC,MAAMW,OAAQC,SAAUb,KAAKC,MAAMS,QAAU,EAAnE,SAAuEV,KAAKC,MAAMT,W,GAJnEa,IAAMC,WCgEZQ,E,kDA5Db,WAAYb,GAAO,IAAD,8BAChB,gBACKc,MAAQ,CACXC,QAAS,EACTC,OAAQ,OAJM,E,mDAOlB,SAAgBC,GACdlB,KAAKmB,UAAS,SAACJ,EAAOK,GAAR,MAAkB,CAC9BJ,QAAS,EACTC,OAAQC,Q,yBAIZ,SAAYG,GAAa,IAAD,OACtBrB,KAAKmB,UAAS,SAACJ,EAAOK,GAAR,MAAkB,CAC9BJ,QAAS,EAAKD,MAAMC,UAAYK,EAAY,EAAI,EAAI,EAAKN,MAAMC,QAAS,MAE1ER,QAAQC,IAAIY,GACZb,QAAQC,IAAIT,KAAKe,MAAMC,W,yBAGzB,WACG,IAAO3B,EAAYW,KAAKC,MAAjBZ,SACPmB,QAAQC,IAAIpB,GACZ,IAAO4B,EAAUjB,KAAKe,MAAfE,OAGP,OAFAT,QAAQC,IAAIQ,GACZT,QAAQC,IAAIpB,EAAS4B,QAAO,SAACf,GAAD,OAAWA,EAAQV,OAASyB,MAG3C,QAAXA,EAAmB5B,EAAWA,EAAS4B,QAAO,SAACf,GAAD,OAAWA,EAAQV,OAASyB,O,yBAI/E,WACE,IAAO5B,EAAYW,KAAKC,MAAjBZ,SACP,OAAO,YAAI,IAAIiC,IAAIjC,EAASkC,QAAO,SAACC,EAAD,OAAUhC,EAAV,EAAUA,KAAV,4BAAyBgC,GAAzB,CAAgChC,MAAO,Q,oBAG5E,WAAS,IAAD,OACAiC,EAAmBzB,KAAK0B,cACxBF,EAAQxB,KAAK2B,cACnBnB,QAAQC,IAAIe,GACZ,IAAMR,EAAUS,EAAiBzB,KAAKe,MAAMC,SAE5C,OADAR,QAAQC,IAAIgB,GAEZ,sBAAK1B,UAAU,QAAf,UAEA,cAAC,EAAD,CAASG,QAASc,IAClB,cAAC,EAAD,CAAQxB,KAAO,MAAMoB,OAAQ,WAAK,EAAKgB,gBAAgB,UACvDJ,EAAMK,KAAI,SAACrC,GAAD,OAAW,cAAC,EAAD,CAAqBA,KAAQA,EAAMoB,OAAQ,WAAK,EAAKgB,gBAAgBpC,KAAtDA,MAGpC,cAAC,EAAD,CAAQA,KAAO,OAAOoB,OAAQ,WAAK,EAAKkB,YAAYL,EAAiBf,SAAUA,OAAQe,EAAiBf,gB,GAtDjFL,IAAMC,WCKlByB,MANf,WACE,OACE,cAAC,EAAD,CAAc1C,SAAU2C,KCKbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.dc811f50.chunk.js","sourcesContent":["const pokemons = [\n  {\n      id: 25,\n      name: \"Pikachu\",\n      type: 'Electric',\n      averageWeight: {\n          value: 6.0,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn2.bulbagarden.net/upload/b/b2/Spr_5b_025_m.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Pikachu_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 4,\n      name: \"Charmander\",\n      type: 'Fire',\n      averageWeight: {\n          value: 8.5,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn2.bulbagarden.net/upload/0/0a/Spr_5b_004.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Charmander_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 10,\n      name: \"Caterpie\",\n      type: 'Bug',\n      averageWeight: {\n          value: 2.9,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn2.bulbagarden.net/upload/8/83/Spr_5b_010.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Caterpie_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 23,\n      name: \"Ekans\",\n      type: 'Poison',\n      averageWeight: {\n          value: 6.9,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn2.bulbagarden.net/upload/1/18/Spr_5b_023.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Ekans_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 65,\n      name: \"Alakazam\",\n      type: 'Psychic',\n      averageWeight: {\n          value: 48.0,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn2.bulbagarden.net/upload/8/88/Spr_5b_065_m.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Alakazam_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 151,\n      name: \"Mew\",\n      type: 'Psychic',\n      averageWeight: {\n          value: 4.0,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn2.bulbagarden.net/upload/4/43/Spr_5b_151.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Mew_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 78,\n      name: \"Rapidash\",\n      type: 'Fire',\n      averageWeight: {\n          value: 95.0,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn2.bulbagarden.net/upload/5/58/Spr_5b_078.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Rapidash_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 143,\n      name: \"Snorlax\",\n      type: 'Normal',\n      averageWeight: {\n          value: 460.0,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn2.bulbagarden.net/upload/4/40/Spr_5b_143.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Snorlax_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 148,\n      name: \"Dragonair\",\n      type: 'Dragon',\n      averageWeight: {\n          value: 16.5,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn2.bulbagarden.net/upload/2/2c/Spr_5b_148.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Dragonair_(Pok%C3%A9mon)\"\n  }\n];\n\nexport default pokemons;","import React from 'react'\nimport './App.css'\n\nclass Pokemon extends React.Component {\n  render(){\n    return(\n      <div className = 'Pokemon'>\n    <div className='info'>\n    <p>{this.props.pokemon.name}</p>\n    <p>{this.props.pokemon.type}</p>\n    <p>Average weight: {this.props.pokemon.averageWeight.value} {this.props.pokemon.averageWeight.measurementUnit}</p>\n       </div> \n      <img src={this.props.pokemon.image} alt=\"\" />\n     </div>)\n    \n  }\n}\nexport default Pokemon;","import React from \"react\";\n\n\nclass Button extends React.Component {\n  render(){\n    console.log(this.props.length)\n    return(\n      <button onClick={this.props.action} disabled={this.props.length <= 1}>{this.props.type}</button>\n    )\n    \n  }\n}\n\nexport default Button;","import React from 'react'\nimport './App.css';\nimport Pokemon from './Pokemon'\nimport Button from './Button';\nimport pokemons from './data';\n\nclass Only1Pokemon extends React.Component {\n  constructor(props){\n    super();\n    this.state = {\n      current: 0,\n      filter: 'all'\n    }\n  }\n  filteredPokemon(filtered){\n    this.setState((state, _props)=>({\n      current: 0,\n      filter: filtered\n    }))\n  }\n\n  nextPokemon(totalNumber){\n    this.setState((state, _props)=>({\n      current: this.state.current === totalNumber-1 ? 0 : this.state.current +1\n    }))\n    console.log(totalNumber)\n    console.log(this.state.current)\n  }\n\n  getFiltered(){\n     const {pokemons} = this.props;\n     console.log(pokemons)\n     const {filter} = this.state;\n     console.log(filter)\n     console.log(pokemons.filter((pokemon)=>pokemon.type === filter))\n     return(\n \n       filter === 'all' ? pokemons : pokemons.filter((pokemon)=>pokemon.type === filter)\n     )\n  }\n\n  getAllTypes(){\n    const {pokemons} = this.props;\n    return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n  }\n  \n  render(){\n    const filteredPokemons = this.getFiltered()\n    const types = this.getAllTypes()\n    console.log(types)\n    const current = filteredPokemons[this.state.current]\n    console.log(filteredPokemons)\n    return (\n    <div className=\"only1\" >\n     \n    <Pokemon pokemon={current} />\n    <Button type = 'all' action={()=>{this.filteredPokemon('all')}}/>\n   {types.map((type) =>  <Button key = {type} type = {type} action={()=>{this.filteredPokemon(type)}}/>\n   )}\n    \n    <Button type = 'Next' action={()=>{this.nextPokemon(filteredPokemons.length)}} length={filteredPokemons.length}/>\n   \n      \n    </div>\n  );}\n}\n\nexport default Only1Pokemon;","import data from './data';\nimport './App.css';\nimport Only1Pokemon from './Only1Pokemon';\n\n\nfunction App() {\n  return (\n    <Only1Pokemon pokemons={data} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}